import sys
from pathlib import Path

project_dir = Path("__file__").resolve().parents[1]
sys.path.insert(0, '{}/temporal_granularity/'.format(project_dir))
# from src.models.env.som_env import SOMEnv
from src.models.env.k_means_env import KMeansEnv
from src.models.env.som_env import SOMEnv
import pandas as pd


onshore_data = pd.read_csv(
    '{}/temporal_granularity/data/processed/data_grouped_by_day/pv_each_day.csv'.format(project_dir))

onshore_data_np = onshore_data[(onshore_data.date > "2013") & (
    onshore_data.date < "2014")].reset_index().drop(
    columns=["date", 'index']).values

load_data = pd.read_csv(
    "{}/temporal_granularity/data/processed/data_grouped_by_day/load_normalised_each_day.csv".format(project_dir))

load_data_np = load_data[(load_data.date > "2013") & (
    load_data.date < "2014")].reset_index().drop(columns=["date", 'index']).values


# offshore_data = pd.read_csv(
# '{}/temporal_granularity/data/processed/resources/offshore_processed.csv'.format(project_dir))
pv_data = pd.read_csv(
    '{}/temporal_granularity/data/processed/data_grouped_by_day/pv_each_day.csv'.format(project_dir))

pv_data_np = pv_data[(pv_data.date > "2013") & (
    pv_data.date < "2014")].reset_index().drop(columns=["date", 'index']).values

pv_data = pd.read_csv(
    '{}/temporal_granularity/data/processed/resources/pv_processed.csv'.format(project_dir))
onshore_data = pd.read_csv(
    '{}/temporal_granularity/data/processed/resources/onshore_processed.csv'.format(project_dir))
load_data = pd.read_csv(
    "{}/temporal_granularity/data/processed/demand/load_processed_normalised.csv".format(project_dir))


# individual = [0.19]
# x1 = 3 * 51 * [0]
# x1 = [47.00, 19.01, 50.97, 45.02, 57.70, 45.92, 35.27, 52.42, 1.84, 59.00, 10.61, 0.75, 40.54, 95.07, 80.11, 15.98, 9.28, 93.83, 55.15, 86.12, 53.02, 89.74, 16.31, 1.86, 35.35, 9.16, 53.19, 70.00, 3.95, 82.94, 98.15, 30.83, 94.92, 99.45, 1.50, 83.30, 25.87, 45.51, 99.90, 8.15, 27.93, 26.51, 99.02, 5.86, 56.10, 42.87, 97.25, 68.51, 62.10, 19.45, 29.13, 90.65, 1.29, 96.85, 41.60, 34.79, 73.99, 16.94, 81.97, 2.56, 37.12, 65.14, 28.96, 24.35, 94.22, 17.49, 46.10, 0.08, 60.58, 70.09, 90.35, 96.98, 61.35, 30.16, 56.69, 41.98,
#   41.41, 79.98, 26.81, 27.69, 26.74, 37.34, 43.83, 5.39, 79.88, 48.55, 4.54, 94.78, 47.73, 51.74, 44.00, 7.81, 91.09, 38.90, 74.00, 39.27, 44.29, 33.79, 30.47, 37.75, 25.30, 42.05, 62.07, 6.70, 44.13, 73.39, 96.14, 69.58, 29.26, 89.61, 33.44, 41.84, 4.60, 43.90, 81.40, 47.20, 9.15, 29.57, 3.30, 55.27, 72.02, 1.64, 71.33, 18.04, 49.52, 34.89, 68.19, 99.39, 30.26, 27.99, 6.04, 11.88, 18.68, 16.67, 11.82, 29.99, 85.93, 81.37, 84.63, 59.68, 81.87, 25.69, 82.72, 82.35, 29.90, 10.57, 35.73, 11.11, 31.42, 31.13, 10.96, 65.25, 59.90]

individual = [3.609, 3.001]
# x1 = [29.430, 86.302, 59.346, 57.465, 85.554, 16.560, 47.999, 94.517, 45.272, 70.038, 89.866, 98.185, 14.976, 17.142, 1.613, 50.808, 49.087, 63.957, 24.110, 41.278, 4.517, 35.588, 71.127, 84.790, 26.119, 89.981, 80.983, 18.982, 80.100, 39.457, 58.917, 35.732, 83.137, 95.211, 75.497, 92.638, 68.276, 27.251, 60.066, 80.950, 85.576, 70.527, 31.586, 51.954, 39.192, 19.185, 79.949, 4.077, 53.612, 89.193, 36.872, 0.313, 3.014, 48.072, 4.000, 69.510, 43.354, 25.181, 50.311, 83.763, 6.574, 51.362, 73.072, 49.721, 55.228, 20.811, 88.110, 8.638, 0.829, 38.809, 42.082, 8.475, 3.385, 36.220, 86.993, 35.957, 39.308, 6.083, 83.746, 73.250, 63.438, 4.242, 48.840, 73.260, 35.264, 64.026, 96.804, 37.763, 59.383, 29.739, 65.518, 74.767, 34.514, 42.965, 67.934, 56.174, 9.083, 17.867, 7.492, 64.088, 54.441, 12.582, 47.620, 76.244, 39.514, 66.744, 69.878, 79.202, 13.698, 2.980, 60.597, 98.692, 60.911, 82.185, 54.579, 91.659, 2.911, 11.895, 76.623, 39.108, 65.710, 97.136, 64.028, 32.485, 44.572, 6.012, 7.128, 31.654, 18.315, 18.427, 75.442, 4.105, 25.504, 70.573, 61.474, 16.663, 62.251, 88.367, 23.545, 90.784, 10.893, 23.405, 74.344, 34.847, 89.715, 51.411, 12.473, 97.918, 31.362, 49.126, 3.112, 14.698, 97.192, 96.957, 1.141, 47.324, 97.554, 40.955, 67.696, 71.864, 40.357, 2.982, 10.618, 64.760, 73.793, 2.787, 32.630, 7.005, 88.338, 17.775, 47.112, 85.036, 33.973, 29.853, 2.505, 53.012, 43.380, 72.147, 30.649, 82.584, 45.738, 13.868, 99.600, 7.300, 39.539, 73.164, 78.933, 66.835, 84.224, 22.039, 40.951, 15.975, 14.784, 85.422, 75.502, 51.955, 6.273, 1.377, 61.547, 88.961, 58.371, 23.113, 34.063, 34.455, 46.427, 99.306, 81.790, 45.267, 34.860, 98.279, 53.798, 2.306, 11.842, 75.420, 57.860, 45.714, 11.972, 52.563, 54.835, 12.886, 78.315, 52.337, 22.701, 10.555, 82.568, 11.576, 80.073, 99.181, 71.990, 23.174, 81.322, 51.764, 68.101, 4.744, 55.076, 32.309, 72.994, 7.427, 40.888, 92.250, 71.780, 87.501, 27.209, 31.023, 98.599, 30.946, 97.959, 16.526, 82.929, 63.957, 3.192, 10.264, 86.149, 87.436, 41.426, 87.715, 61.914, 37.788, 4.582, 97.024, 1.222, 68.491, 65.429, 65.076, 96.991, 37.616, 6.024, 2.667, 87.908, 8.371, 93.796, 71.111, 0.596, 13.378, 0.738, 59.875, 98.667, 25.020, 68.259, 65.362, 64.506, 95.439, 9.770, 92.462, 17.134, 4.472, 98.792, 65.586, 20.170, 83.335, 68.050, 47.978, 72.028, 29.413, 23.030, 55.083, 35.602, 70.990, 35.632, 31.168, 98.819, 88.555, 41.575, 80.267, 37.206, 11.302, 61.988, 77.231, 34.256, 52.639, 92.156, 57.002, 72.140, 66.354, 72.208, 15.476, 0.772, 45.580, 40.173, 91.365, 18.199, 51.578, 54.128, 68.360, 81.214, 89.151, 55.963, 99.672, 3.098, 18.387, 44.547, 42.888, 5.066, 32.915, 0.172, 20.142, 27.569, 11.107, 33.659, 37.276, 92.968, 40.818, 54.083, 63.665, 32.788, 7.864, 64.426, 96.244, 43.232, 83.060, 24.164, 85.049, 57.363, 43.277, 88.540, 69.207, 0.921, 37.770, 5.285, 45.282, 61.094, 91.394, 93.999, 77.267, 55.254, 6.694, 42.860, 74.367, 21.040, 56.083, 61.693, 87.675, 96.644, 63.923, 57.971, 57.478, 6.276, 21.075, 9.175, 40.957, 15.744, 47.827, 90.520, 59.627, 23.151, 74.692, 27.824, 11.658, 74.988, 9.388, 71.797, 95.653, 88.131, 56.647, 13.410, 61.532, 95.615, 72.431, 80.255, 84.308, 37.257, 29.054, 94.863, 24.935, 44.295, 62.242, 6.082, 59.941, 11.514, 32.144, 99.013, 79.396, 43.752, 90.999, 72.110, 57.900, 6.465, 68.172, 71.967, 22.038, 40.801, 37.142, 23.663, 41.780, 2.753, 85.670, 23.607, 24.105, 75.556, 98.614, 43.491, 36.516]
x1 = 3 * 12 * 12 * [0]

individual.extend(x1)

# individual = [3.610, 2.997, 29.380, 87.292, 58.680, 57.453, 99.294, 16.795, 47.999, 97.807, 40.898, 69.942, 21.535, 98.185, 15.135, 17.212, 5.939, 9.976, 49.260, 64.867, 23.679, 35.505, 12.826, 43.976, 71.175, 76.688, 26.253, 91.382, 81.036, 19.480, 80.100, 39.456, 41.519, 55.847, 81.838, 95.298, 75.495, 88.789, 68.130, 29.266, 60.061, 81.240, 85.211, 70.574, 33.684, 52.638, 84.991, 14.256, 79.828, 4.198, 53.944, 89.758, 35.290, 78.365, 3.004, 51.153, 1.436, 68.800, 43.106, 2.096, 50.624, 11.277, 6.980, 51.616, 59.920, 47.407, 50.346, 79.312, 90.481, 9.798, 1.606, 38.755, 42.093, 2.459, 0.868, 36.403, 87.285, 5.770, 0.746, 7.383, 80.161, 73.950, 66.425, 73.960, 48.911, 84.269, 33.451, 59.863, 31.237, 38.281, 26.912, 29.684, 65.622, 8.486, 32.660, 37.857, 67.656, 82.268, 30.825, 27.302, 9.934, 63.897, 42.433, 38.643, 48.179, 76.229, 38.950, 36.847, 72.475, 61.441, 15.323, 50.425, 55.374, 97.269, 64.458, 81.996, 54.579, 89.529, 0.132, 11.813, 81.517, 28.661, 65.568, 97.070, 64.032, 46.243, 45.141, 1.966, 5.633, 30.861, 18.427, 18.339, 75.436, 7.711, 25.498, 56.597, 58.538, 16.562, 46.606, 87.878, 22.487, 90.431, 13.236, 24.118, 57.101, 34.787, 89.705, 51.409, 11.871, 97.914, 31.360, 67.119, 2.990, 15.014, 93.543, 96.476, 1.210, 46.608, 93.903, 44.102, 66.801, 71.959, 43.608, 77.763, 10.536, 64.751, 73.893, 42.810, 32.911, 6.057, 86.742, 17.785, 47.075, 85.133, 33.983, 70.627, 0.160, 19.968, 63.506, 72.147, 38.026, 82.102, 97.625, 13.979, 30.327, 0.454, 31.040, 71.060, 78.896, 66.347, 84.210, 22.013, 40.935, 55.881, 25.066, 85.393, 75.500, 51.950, 6.332, 90.124, 28.679, 88.677, 87.030, 29.625, 94.864, 30.787, 45.917, 98.206, 82.147, 53.298, 87.743, 98.304, 49.518, 91.496, 17.887, 70.956, 57.904, 60.746, 17.728, 51.460, 45.226, 43.331, 96.398, 68.178, 24.402, 52.854, 90.388, 77.009, 23.520, 95.143, 69.321, 23.166, 82.984, 51.789, 68.099, 4.636, 53.896, 32.714, 72.686, 7.256, 7.707, 92.212, 71.600, 33.546, 29.253, 93.280, 94.275, 28.717, 98.896, 16.524, 75.581, 17.540, 4.861, 5.284, 86.193, 88.941, 41.489, 86.063, 60.047, 37.547, 5.785, 96.978, 0.604, 68.791, 65.432, 17.666, 78.197, 37.117, 6.072, 2.762, 88.476, 7.740, 93.518, 71.097, 0.572, 13.051, 1.444, 60.427, 34.825, 24.622, 68.257, 65.257, 64.510, 68.790, 9.527, 66.957, 17.284, 5.789, 98.853, 64.965, 20.212, 83.188, 68.131, 48.410, 72.007, 29.006, 23.030, 56.041, 29.410, 71.005, 93.700, 30.699, 52.128, 8.925, 41.935, 79.960, 37.398, 12.424, 0.746, 70.753, 34.374, 52.725, 96.311, 57.008, 72.113, 66.380, 72.519, 16.159, 1.799, 44.109, 40.059, 89.719, 18.202, 52.527, 52.706, 55.648, 79.963, 6.871, 58.843, 98.621, 4.628, 17.644, 42.984, 43.797, 5.008, 32.511, 1.405, 19.141, 32.605, 74.996, 35.180, 37.082, 93.008, 41.879, 4.523, 88.384, 31.082, 7.282, 62.531, 93.035, 40.401, 89.497, 24.164, 81.888, 43.067, 43.001, 81.274, 69.569, 0.890, 37.977, 62.222, 45.277, 63.279, 90.016, 97.605, 77.267, 54.856, 9.506, 42.958, 29.805, 21.038, 12.113, 68.010, 87.670, 96.598, 58.498, 57.510, 57.749, 5.449, 67.364, 10.376, 35.558, 17.058, 47.790, 99.150, 22.329, 22.054, 73.916, 79.599, 10.205, 15.339, 9.333, 72.593, 93.915, 91.980, 60.927, 13.409, 59.999, 95.401, 67.893, 80.257, 66.099, 23.780, 31.149, 92.583, 21.494, 45.389, 62.240, 5.759, 77.226, 11.396, 60.307, 92.079, 78.061, 41.472, 91.190, 73.237, 56.619, 6.183, 68.148, 71.713, 21.476, 40.785, 36.534, 23.454, 34.824, 2.741, 85.675, 24.789, 86.016, 4.167, 99.265, 47.767, 34.233]

individual = [int(i) for i in individual]
env = SOMEnv(pv_data_np, onshore_data_np, load_data_np,
             pv_data, onshore_data, load_data, round(individual[0] / 10) + 2, round(individual[1] / 10) + 2, 20000)
result = env.step(individual[2:])
result = result[0], result[1], result[2]
print(result)
